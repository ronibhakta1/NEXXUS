generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String   
  phone     String?  @unique 
  name      String
  avatar    String?  // URL to the user's avatar or profile image
  verified  Boolean  @default(false)  // Verification status of the user
  echos     echo[]
  likes     Like[]
  comments  Comment[]
  shares    Share[]
  reshares  Reshare[]
}

model echo {
  id          Int      @id @default(autoincrement())
  content     String
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  avatar      String?  // URL to the user's avatar or profile image
  image       String?  @default("") // URL to the post image
  time        DateTime @default(now()) // Timestamp of the post
  username    String   // User handle, e.g., @username
  flagData    echoContentFlagdata? // Relation to echoContentFlagdata model
  likes       Like[]
  comments    Comment[]
  shares      Share[]
  reshares    Reshare[]
}

model echoContentFlagdata {
  id          Int      @id @default(autoincrement()) // Primary identifier as auto-incremented integer
  echoId      Int      @unique // Foreign key linking to Echo's id
  sentiment   String   // Sentiment flag: 'neg', 'pos', 'neutral'
  extraData   Json?    // Additional data for sentiment analysis
  echo        echo     @relation(fields: [echoId], references: [id]) // Relation to Echo model
}

model Like {
  id      Int    @id @default(autoincrement())
  userId  Int
  echoId  Int
  user    User   @relation(fields: [userId], references: [id])
  echo    echo   @relation(fields: [echoId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  echoId    Int
  createdAt DateTime @default(now())  // Timestamp for when the comment was created
  user      User     @relation(fields: [userId], references: [id])
  echo      echo     @relation(fields: [echoId], references: [id])
}

model Share {
  id      Int    @id @default(autoincrement())
  userId  Int
  echoId  Int
  user    User   @relation(fields: [userId], references: [id])
  echo    echo   @relation(fields: [echoId], references: [id])
}

model Reshare {
  id        Int      @id @default(autoincrement())
  userId    Int
  echoId    Int
  createdAt DateTime @default(now())  // Timestamp for when the reshare was created
  user      User     @relation(fields: [userId], references: [id])
  echo      echo     @relation(fields: [echoId], references: [id])
}